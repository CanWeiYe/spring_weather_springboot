<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yee.springbootdemo.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.yee.springbootdemo.entity.Student">
    <constructor>
      <idArg column="sno" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="sname" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="age" javaType="java.lang.Short" jdbcType="SMALLINT" />
      <arg column="phoneNumber" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="sex" javaType="java.lang.String" jdbcType="CHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    sno, sname, age, phoneNumber, sex
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from student
    where sno = #{sno,jdbcType=CHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from student
  </select>
  <select id="selectByFilter" parameterType="com.yee.springbootdemo.entity.Student" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from student
    <where>
      <if test='sno != null and sno != ""'>
        and sno = #{sno,jdbcType=CHAR}
      </if>
      <if test='sex != null and sex != ""'>
        and sex = #{sex,jdbcType=CHAR}
      </if>
      <if test='sname != null and sname != ""'>
        and sname = #{sname,jdbcType=CHAR}
      </if>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from student
    where sno = #{sno,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.yee.springbootdemo.entity.Student">
    insert into student (sno, sname, age,
      phoneNumber, sex)
    values (#{sno,jdbcType=CHAR}, #{sname,jdbcType=VARCHAR}, #{age,jdbcType=SMALLINT},
      #{phonenumber,jdbcType=CHAR}, #{sex,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yee.springbootdemo.entity.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sno != null">
        sno,
      </if>
      <if test="sname != null">
        sname,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="phonenumber != null">
        phoneNumber,
      </if>
      <if test="sex != null">
        sex,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sno != null">
        #{sno,jdbcType=CHAR},
      </if>
      <if test="sname != null">
        #{sname,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=SMALLINT},
      </if>
      <if test="phonenumber != null">
        #{phonenumber,jdbcType=CHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yee.springbootdemo.entity.Student">
    update student
    <set>
      <if test="sname != null">
        sname = #{sname,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=SMALLINT},
      </if>
      <if test="phonenumber != null">
        phoneNumber = #{phonenumber,jdbcType=CHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
    </set>
    where sno = #{sno,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yee.springbootdemo.entity.Student">
    update student
    set sname = #{sname,jdbcType=VARCHAR},
      age = #{age,jdbcType=SMALLINT},
      phoneNumber = #{phonenumber,jdbcType=CHAR},
      sex = #{sex,jdbcType=CHAR}
    where sno = #{sno,jdbcType=CHAR}
  </update>
</mapper>
